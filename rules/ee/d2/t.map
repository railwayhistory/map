# EE TK.  Tartu - Koidula
with detail = 2 {
    let tk = path("d2.ee.tk");

    with railway = :first :g1520 :pax {
        with link = "line.ee.TK" {
            track(tk[:tar.yk, :tar.yk + 5km]);
            line_label(:left:w, tk[:tar.yk + 5km], "TK");
            track(tk[:tar.yk + 5km, :kli.yp - 9km]);
            line_label(:left:sw, tk[:kli.yp - 9km], "TK");
            track(tk[:kli.yp - 9km, :kli.yp]);
            track(tk[:kli.yp, :koi.yt]);
        }
    }
}


# EE TM.  Tallinn - Mõisaküla (riigipiir)
with detail = 2 {
    let tm = path("d2.ee.tm");

    with railway = :second :g1520 :pax {
        with link = "line.ee.TM" {
            track(tm[:tal.yl, :lii.yu]);
            track(tm[:lii.yu, :lii]);
        }

        with link = "point.ee.Liiva" {
            statdot(tm[:lii]);
            slabel(:right, tm[:lii] + (1.5dt, 1dt), "Liiva");
        }

        with link = "line.ee.TM" {
            track(tm[:lii, :lii + 6km]);
            line_label(:left:w, tm[:lii + 6km], (0dt, 0.1dt), "TM");
            track(tm[:lii + 6km, :rap - 7km]);
            line_label(:left:w, tm[:rap - 7km], (0dt, -0.2dt), "TM");
            track(tm[:rap - 7km, :rap]);
        }

        with link = "point.ee.Rapla" {
            track(:station, tm[:rap, :rap.yv]);
            statdot(tm[:rap]);
            slabel(:right, tm[:rap] + (1.5dt, 0dt), "Rapla");
        }

        with link = "line.ee.TM" {
            track(tm[:rap.yv, :rap.yv + 8.5km]);
            line_label(:left:sw, tm[:rap.yv + 8.5km], "TM");
            track(tm[:rap.yv + 8.5km, :lel]);
        }

        with link = "point.ee.Lelle" {
            track(:station, tm[:lel, :lel.yv]);
            statdot(tm[:lel]);
            slabel(:right, tm[:lel] + (1.3dt, 0dt), "Lelle");
        }
    }

    with railway = :second :g1520 :nopax {
        with link = "line.ee.TM" {
            track(tm[:lel.yv, :lel.yv + 15.5km]);
            line_label(:right:se, tm[:lel.yv + 15.5km], "TM");
            track(tm[:lel.yv + 15.5km, :vil.yv]);
        }

        with link = "point.ee.Viluvere" {
            track(:station, tm[:vil.yv, :vil]);
            statdot(tm[:vil]);
            slabel(:left, tm[:vil] + (-1.5dt, 0.5dt), "Viluvere");
        }

        with link = "line.ee.TM" {
            track(tm[:vil, :tam.yp - 7.3km]);
            line_label(:right:se, tm[:tam.yp - 7.3km], "TM");
            track(tm[:tam.yp - 7.3km, :tam.yp]);
            track(tm[:tam.yp, :pak]);
        }

        with link = "point.ee.Pärnu-kaubajaam" {
            statdot(tm[:pak]);
            slabel(:left, tm[:pak] + (1dt, -0.8dt),
                vbox(:right:bottom, "Pärnu", span(:light, "kaubajaam"))
            );
        }
    }

    with railway = :second :g1520 :removed {
        with link = "line.ee.TM" {
            track(tm[:pak, :par.ym]);
        }

        with link = "point.ee.Pärnu" {
            track(:station, tm[:par.ym, :par.yt]);
            statdot(tm[:par]);
            slabel(:ne, tm[:par] + (-1.5dt, -0.5dt), "Pärnu");
        }

        with link = "line.ee.TM" {
            track(tm[:par.yt, :par.yt + 11km]);
            line_label(:right:ne, tm[:par.yt + 11km], "TM");
            track(tm[:par.yt + 11km, :rii]);
        }

        with link = "point.ee.Riisselja" {
            statdot(tm[:rii]);
            slabel(:right, tm[:rii] + (1.5dt, 0dt), "Riisselja");
        }

        with link = "line.ee.TM" {
            track(tm[:rii, :rii + 12km]);
            line_label(:left:sw, tm[:rii + 12km], "TM");
            track(tm[:rii + 12km, :moi]);
        }

        with link = "point.ee.Mõisaküla" {
            track(:station, tm[:moi, :moi.yv]);
            statdot(tm[:moi]);
            slabel(:ne, tm[:moi] + (-1.5dt, -0.8dt), "Mõisaküla");
        }

        with link = "line.ee.TM" {
            track(tm[:moi.yv, :mor]);
        }
    }
}


# EE TN.  Tallinn-Balti - Narva (riigipiir)
with detail = 2 {
    let tn = path("d2.ee.tn");

    with railway = :first :double :g1520 :cat:dc30 :pax {
        with link = "point.ee.Tallinn-Balti" {
            statdot(tn[:tal]);
            slabel(:right, tn[:tal] + (-1dt, -0.8dt),
                vbox(:left:bottom,
                    span(:large :bold, "Tallinn"),
                    "-Balti"
                )
            );
        }

        with link = "line.ee.TN" {
            track(tn[:tal, :tal.yh]);
            track(tn[:tal.yh, :tal.yl]);
            track(tn[:tal.yl, :ule.yl]);
            track(tn[:ule.yl, :ule]);
        }

        with link = "point.ee.Ülemiste" {
            statdot(tn[:ule]);
            slabel(:right, tn[:ule] + (-3dt, -1.5dt), "Ülemiste");
        }

        with link = "line.ee.TN" {
            track(tn[:ule, :ule.ym]);
            track(tn[:ule.ym, :lag.ym - 2km]);
            line_label(:right:ne, tn[:lag.ym - 2km], "TN");
            track(tn[:lag.ym - 2km, :lag.ym]);
            track(tn[:lag.ym, :lag]);
        }

        with link = "point.ee.Lagedi" {
            statdot(tn[:lag]);
            slabel(:right, tn[:lag] + (1.3dt, -0.3dt), "Lagedi");
        }

        with link = "line.ee.TN" {
            track(tn[:lag, :lag + 11km]);
            line_label(:right:n, tn[:lag + 11km], "TN");
            track(tn[:lag + 11km, :aeg]);
        }

        with link = "point.ee.Aegviidu" {
            statdot(tn[:aeg]);
            slabel(:right, tn[:aeg] + (1.3dt, -0.3dt), "Aegviidu");
        }
    }

    with railway = :first :double :g1520 :pax {
        with link = "line.ee.TN" {
            track(tn[:aeg, :aeg + 11km]);
            line_label(:right:n, tn[:aeg + 11km], "TN");
            track(tn[:aeg + 11km, :tap]);
        }

        with link = "point.ee.Tapa" {
            track(:station, tn[:tap, :tap.yt]);
            statdot(tn[:tap]);
            slabel(:left, tn[:tap] + (1.0dt, -1.6dt), "Tapa");
        }
    }

    with railway = :first :g1520 :pax {
        with link = "line.ee.TN" {
            track(tn[:tap.yt, :tap.yt + 6km]);
            line_label(:left:se, tn[:tap.yt + 6km], "TN");
            track(tn[:tap.yt + 6km, :rak]);
        }

        with link = "point.ee.Rakvere" {
            track(:station, tn[:rak, :rak.yk]);
            statdot(tn[:rak]);
            slabel(:left, tn[:rak] + (1dt, -1.4dt), "Rakvere");
        }

        with link = "line.ee.TN" {
            track(tn[:rak.yk, :son.ya]);
            line_label(:right:n, tn[:rak.yk + 10.5km], "TN");
        }

        with link = "point.ee.Sonda" {
            track(:station, tn[:son.ya, :son.ym]);
            statdot(tn[:son]);
            slabel(:right, tn[:son] + (-1dt, -1.6dt), "Sonda");
        }

        with link = "line.ee.TN" {
            track(tn[:son.ym, :son.ym + 14.3km]);
            line_label(:left:s, tn[:son.ym + 14.3km], "TN");
            track(tn[:son.ym + 14.3km, :nar - 15km]);
            line_label(:left:s, tn[:nar - 15km], "TN");
            track(tn[:nar - 15km, :nar]);
        }

        with link = "point.ee.Narva" {
            statdot(tn[:nar]);
            slabel(:ne, tn[:nar] + (0dt, 0.5dt), "Narva");
        }

        with link = "line.ee.TN" {
            track(tn[:nar, :nrr]);
        }

        with link  = "point.int.Ивангород-Narva" {
            track(tn[:nrr, :f]);
            slabel(:right :italic, tn[:f] + (0.8dt, 1dt),
                latspan("Санкт-Петербург", "Sankt-Peterburg")
            );
        }
    }
}


# EE TP.  Tammiste - Pärnu M.
with detail = 2 {
    let tp = path("d2.ee.tp");

    with railway = :second :g750 :removed {
        with link = "line.ee.TP" {
            track(tp[:tam.yp, :tam.yp + 7km]);
            line_label(:left:nw, tp[:tam.yp + 7km], "TP");
            track(tp[:tam.yp + 7km, :par.yt]);
        }

        # point.ee.Pärnu  ee.TM

        with link = "line.ee.TP" {
            track(tp[:par.ym, :pam]);
        }

        with link = "point.ee.Pärnu-M" {
            statdot(tp[:pam]);
            slabel(:left, tp[:pam] + (-1.5dt, 0.8dt), "Pärnu");
        }
    }
}


# EE TT.  Türi - Tamsalu
with detail = 2 {
    let tt = path("d2.ee.tt");

    with railway = :second :g750 :removed {
        with link = "line.ee.TT" {
            track(tt[:tur.yt, :tur.yt + 14km]);
            line_label(:left:e, tt[:tur.yt + 14km], (0dt, -0.2dt), "TT");
            track(tt[:tur.yt + 14km, :tam.yt - 13.1km]);
            line_label(:left:se, tt[:tam.yt - 13.1km], "TT");
            track(tt[:tam.yt - 13.1km, :tam.yt]);
        }
    }
}


# EE TV.  Tapa - Valga (riigipiir)
with detail = 2 {
    let tv = path("d2.ee.tv");

    with railway = :first :g1520 :pax {
        with link = "line.ee.TV" {
            track(tv[:tap.yt, :tap.yt + 7.5km]);
            line_label(:left:w, tv[:tap.yt + 7.5km], (0dt, -0.2dt), "TV");
            track(tv[:tap.yt + 7.5km, :tam]);
        }

        with link = "point.ee.Tamsalu" {
            track(:station, tv[:tam, :tam.yt]);
            statdot(tv[:tam]);
            slabel(:right, tv[:tam] + (1.3dt, -0.3dt), "Tamsalu");
        }

        with link = "line.ee.TV" {
            track(tv[:tam.yt, :tam.yt + 9km]);
            line_label(:left:w, tv[:tam.yt + 9km], (0dt, -0.2dt), "TV");
            track(tv[:tam.yt + 9km, :jog + 1.5km]);
            line_label(:right:e, tv[:jog + 1.5km], (0dt, 0.1dt), "TV");
            track(tv[:jog + 1.5km, :tar - 11km]);
            line_label(:right:e, tv[:tar - 11km], "TV");
            track(tv[:tar - 11km, :tar]);
        }

        with link = "point.ee.Tartu" {
            statdot(tv[:tar]);
            slabel(:right :medium :bold, tv[:tar] + (1.8dt, 0dt), "Tartu");
                
        }

        with link = "line.ee.TV" {
            track(tv[:tar, :tar.yk]);
            track(tv[:tar.yk, :tar.yk + 6km]);
            line_label(:right:se, tv[:tar.yk + 6km], "TV");
            track(tv[:tar.yk + 6km, :val.yk - 10km]);
            line_label(:right:se, tv[:val.yk - 10km], "TV");
            track(tv[:val.yk - 10km, :val.yk]);
        }

        with link = "point.ee.Valga" {
            track(:station, tv[:val.yk, :val]);
            statdot(tv[:val]);
            slabel(:left :bold, tv[:val] + (1.5dt, -1.7dt), "Valga");
        }

        with link = "line.ee.TV" {
            track(tv[:val, :val.yv]);
            track(tv[:val.yv, :vrl]);
        }
    }
}

