# GB ECM1.  London King’s Cross - Shaftholme Junction
#
let ks = path("d4.gb.l.ecm1");

with detail = 5 {
    with link = "point.gb.London-Kings-Cross" {
        # Pl. 0
        track(:station :cat:ac25 :pax,
                ks[:kgx, :kgx + 310m] >> 6.5dt
            --  ks[:gwt.a - 5m, :gwt.a - 4m] >> 2.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 300m] >> 6.5dt
            --  ks[:kgx + 300m, :kgx] << 5.8dt
        );

        # Pl. 1
        track(:first:station :cat:ac25 :pax,
                ks[:kgx, :kgx + 310m + 0.7dl] >> 4.5dt
            --  ks[:kgx + 370m + 0.7dl, :gwt.a] >> 2.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 300m] >> 4.5dt
            --  ks[:kgx + 300m, :kgx] << 5.2dt
        );
            track(:station :cat:ac25 :pax,
                    ks[:kgx + 370m + 0.7dl] >> 2.5dt
                --  ks[:kgx + 400m + 0.7dl] >> 1.5dt
            );
            

        # Pl. 2
        track(:first:station :cat:ac25 :pax,
                ks[:kgx, :kgx + 310m] >> 3.5dt
            --  ks[:kgx + 370m, :gwt.a] >> 1.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 280m] >> 3.5dt
            --  ks[:kgx + 280m, :kgx] << 2.5dt
        );
            track(:station :cat:ac25 :pax,
                    ks[:kgx + 370m] >> 1.5dt
                --  ks[:kgx + 400m] >> 0.5dt
            );

        # Pl. 3
        track(:station :cat:ac25 :pax,
                ks[:kgx, :kgx + 340m] >> 2.5dt
        );

        # Pl. 4
        track(:first:station :cat:ac25 :pax,
                ks[:kgx, :kgx + 340m - 0.7dl] >> 1.5dt
            --  ks[:kgx + 370m - 0.7dl, :kgx + 371m - 0.7dl] >> 0.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 280m] >> 1.5dt
            --  ks[:kgx + 280m, :kgx] << 0.5dt
        );

        # Pl. 5
        track(:first:station :cat:ac25 :pax, ks[:kgx, :gwt.a] >> 0.5dt);
            track(:station :cat:ac25 :pax,
                    ks[:kgx + 340m - 1.4dl] >> 0.5dt
                --  ks[:kgx + 370m - 1.4dl] << 0.5dt
            );

        # Pl. 6
        track(:first:station :cat:ac25 :pax, ks[:kgx, :gwt.a] << 0.5dt);
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 280m] << 0.5dt
            --  ks[:kgx + 280m, :kgx] >> 1.5dt
        );

        # Pl. 7
        track(:first:station :cat:ac25 :pax, ks[:kgx, :gwt.a] << 1.5dt);
            track(:station :cat:ac25 :pax,
                    ks[:kgx + 370m - 1.4dl] << 1.5dt
                --  ks[:kgx + 400m - 1.4dl] << 0.5dt
            );

        # Pl. 8
        track(:first:station :cat:ac25 :pax, ks[:kgx, :gwt.a] << 2.5dt);
        platform(:cat:ac25 :pax,
                ks[:kgx, :kgx + 280m] << 2.5dt
            --  ks[:kgx + 280m, :kgx] >> 3.2dt
        );
            track(:station :cat:ac25 :pax,
                    ks[:kgx + 370m - 0.7dl] << 2.5dt
                --  ks[:kgx + 400m - 0.7dl] << 1.5dt
            );

        # Pl. 9
        track(:station :cat:ac25 :pax,
                ks[:kgx + 120m, :kgx + 333m] << 4.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx + 120m, :kgx + 280m] << 4.5dt
            --  ks[:kgx + 280m, :kgx + 120m] >> 3.8dt
        );

        # Pl. 10
        track(:station :cat:ac25 :pax,
                ks[:kgx + 120m, :kgx + 300m] << 5.5dt
            --  ks[:kgx + 400m, :kgx + 401m] << 2.5dt
        );
        platform(:cat:ac25 :pax,
                ks[:kgx + 120m, :kgx + 280m] << 5.5dt
            --  ks[:kgx + 280m, :kgx + 120m] >> 5.0dt
        );

        # A/B
        track(:first:station :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a, :gwt.a + 150m] >> 2dt
        );

        # C/D
        track(:first:station :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a, :gwt.a + 150m]
        );
            track(:station :cat:ac25 :pax :tunnel,
                    ks[:gwt.a + 30m] >> 0.5dt
                --  ks[:gwt.a + 80m] << 0.5dt
            );

        # E/F
        track(:first:station :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a, :gwt.a + 150m] << 2dt
        );
            track(:station :cat:ac25 :pax :tunnel,
                    ks[:gwt.a + 30m] << 2.5dt
                --  ks[:gwt.a + 80m] << 1.5dt
            );

        marker(:top :tunnel.l :cat:ac25 :pax, ks[:gwt.a] << 2.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.a] << 2.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.a] << 1.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.a] << 0.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.a] >> 0.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.a] >> 1.5dt);
        marker(:top :tunnel.r :cat:ac25 :pax, ks[:gwt.a] >> 2.5dt);

        marker(:bottom :de.bf :cat:ac25 :pax, ks[:kgx] >> 2dt);
    }


    with link = "line.gb.ECM1" {
        # A/B
        track(:first :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a + 150m, :gwt.f] >> 2dt
        );

        # C/D
        track(:first :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a + 150m, :gwt.f]
        );

        # E/F
        track(:first :double :cat:ac25 :pax :tunnel,
                ks[:gwt.a + 150m, :gwt.f] << 2dt
        );

        marker(:bottom :tunnel.r :cat:ac25 :pax, ks[:gwt.f] << 2.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.f] << 2.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.f] << 1.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.f] << 0.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.f] >> 0.5dt);
        marker(:right :tunnel.dt :cat:ac25 :pax, ks[:gwt.f] >> 1.5dt);
        marker(:bottom :tunnel.l :cat:ac25 :pax, ks[:gwt.f] >> 2.5dt);
    }


    with link = "point.gb.Belle-Isle-Jn" {
        # ECM1 A
        track(:first:station :cat:ac25 :pax,
                ks[:gwt.f, :bel - 90m] >> 2.5dt
            ..  ks[:bel + 90m, :bel + 91m] >> 0.5dt
        );

        # ECM1 B
        track(:first:station :cat:ac25 :pax,
                ks[:gwt.f, :bel - 216m] >> 1.5dt
            ..  ks[:bel - 85m, :bel - 84m] >> 0.5dt
        );

        # ECM1 C/D - Fast
        track(:first:station :double :cat:ac25 :pax,
                ks[:gwt.f, :cot.a]
        );
            track(:first:station :cat:ac25 :pax,
                    ks[:bel, :bel + 0.1dl] >> 0.5dt
                --  ks[:bel + 75m, :bel + 76m] << 0.5dt
            );

        # ECM1 E/F - Slow
        track(:first:station :double :cat:ac25 :pax,
                ks[:gwt.f, :bel + 50m] << 2dt
        );
            track(:station :cat:ac25,
                    ks[:bel - 216m, :bel - 215m] << 1.5dt
                ..  ks[:bel - 85m, :bel - 84m] << 0.5dt
            );

        # CBI
        let cb = path("d4.gb.cbi");
        track(:first:station :double :cat:ac25 :pax,
                cb[:bel.xc - 0.1dl, :bel.xc]
            ..  cb[:bel, :bel + 0.1dl] << 2dt
        );

        marker(:right :de.abzw :cat:ac25, ks[:bel] >> 1.8dt);
        station(:right :left_align :cat:ac25,
            ks[:bel - 0.4sw] >> 1.8dt >> 1.4sh,
            "Belle Isle Jn.", "CBI: 0.53 · ECM1: 0.57"
        );
    }


    with link = "point.gb.Copenhagen-Jn" {
        # ECM1 Slow
        track(:first:station :double :cat:ac25 :pax,
                ks[:bel + 50m, :cot.a] << 2dt
        );

        # NLI
        track(:first:station :cat:ac25,
                ks[:bel + 50m, :bel + 51m] << 3.5dt
            ..  ks[:cop, :cop + 0.1dl] << 2.5dt
        );

        marker(:left :de.abzw :cat:ac25, ks[:cop] << 3.5dt);
        marker(:left :statdt :cat:ac25, ks[:cop] << 2.5dt);
        station(:left :cat:ac25, ks[:cop] << 3.5dt << 1.3sh,
            "Copenhagen Jn.", "NLI: 0.00 · ECM1: 0.64"
        );
    }

    with link = "line.gb.ECM1" {
        # Slow
        track(:first:double :cat:ac25 :pax :tunnel, ks[:cot.a, :cot.f] << 2dt);

        # Fast
        track(:first:double :cat:ac25 :pax :tunnel, ks[:cot.a, :cot.f]);

        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.a] << 2.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.a] << 1.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.a] << 0.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.a] >> 0.5dt);
        marker(:top :tunnel.r :cat:ac25 :pax, ks[:cot.a] >> 0.5dt);

        marker(:bottom :tunnel.r :cat:ac25 :pax, ks[:cot.f] << 2.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.f] << 1.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.f] << 0.5dt);
        marker(:left :tunnel.dt :cat:ac25 :pax, ks[:cot.f] >> 0.5dt);
        marker(:bottom :tunnel.l :cat:ac25 :pax, ks[:cot.f] >> 0.5dt);

        guide(:cat:ac25 :pax,
                ks[:cot.a + 250m] << 3.2dt
            --  ks[:cot.a + 250m] << 5.5dt
        );
        label(:badgesize :cat:ac25 :pax, ks[:cot.a + 250m] << 6.0dt,
            hbox(:right:middle, "ECM1 Slow")
        );
        guide(:cat:ac25 :pax,
                ks[:cot.a + 250m] >> 1.3dt
            --  ks[:cot.a + 250m] >> 3.5dt
        );
        label(:badgesize :cat:ac25 :pax, ks[:cot.a + 250m] >> 4.0dt,
            hbox(:left:middle, "ECM1 Fast")
        );

        # Down Slow
        track(:first :cat:ac25 :pax :flip:tight,
                ks[:cot.f, :cot.f + 0.1dl] << 2.5dt
            ..  ks[:hos.a - 0.1dt, :hos.a] << 1.5dt
        );

        # Up Slow
        track(:first :cat:ac25 :pax :tight,
                ks[:cot.f, :cot.f + 0.1dl] << 1.5dt
            ..  ks[:hos.a - 0.1dt, :hos.a] >> 1.5dt
        );
        with layer = -1 casing(:first :cat:ac25 :pax :tight,
                ks[:cot.f, :cot.f + 0.1dl] << 1.5dt
            ..  ks[:hos.a - 0.1dt, :hos.a] >> 1.5dt
        );

        # Fast
        with layer = -2 track(:first :double :cat:ac25 :pax,
                ks[:cot.f, :hos.a]
        );
    }


    with link = "point.gb.Holloway-South-Jn" {
        # Down Goods
        track(:first:station :cat:ac25,
                ks[:hos.f - 331m, :hos.f - 330m] << 1.5dt
            ..  ks[:hos.f - 150m, :hos.f] << 3.5dt
        );

        # Down Slow
        track(:first:station :cat:ac25 :pax, ks[:hos.a, :hos.f] << 1.5dt);
            track(:station :cat:ac25,
                    ks[:hos + 270m] << 1.5dt
                --  ks[:hos + 400m] << 0.5dt
            );

        # Down Fast
        track(:first:station :cat:ac25 :pax, ks[:hos.a, :hos.f] << 0.5dt);
            track(:station :cat:ac25,
                    ks[:hos - 180m] << 0.5dt
                --  ks[:hos - 40m] << 1.5dt
            );

        # Up Fast
        track(:first:station :cat:ac25 :pax, ks[:hos.a, :hos.f] >> 0.5dt);
            track(:station :cat:ac25,
                    ks[:hos - 85m] >> 0.5dt
                --  ks[:hos] >> 1.5dt
            );
            track(:station :cat:ac25,
                    ks[:hos.f - 210m] >> 0.5dt
                --  ks[:hos.f - 90m] >> 1.5dt
            );

        # Up Slow
        track(:first:station :cat:ac25 :pax, ks[:hos.a, :hos.f] >> 1.5dt);
            track(:station :cat:ac25,
                    ks[:hos + 30m] >> 1.5dt
                --  ks[:hos + 150m] >> 0.5dt
            );

        # Up Goods
        track(:first:station :cat:ac25,
                ks[:hos.f - 201m, :hos.f - 200m] >> 1.5dt
            ..  ks[:hos.f - 60m, :hos.f] >> 2.5dt
        );

        marker(:right :de.abzw :cat:ac25, ks[:hos] >> 1.5dt);
        station(:right :cat:ac25, ks[:hos - 1.0sw] >> 2.5dt,
            hbox(:left:top, "Holloway South Jn."),
            "ECM1: 1.44"
        );
    }


    with link = "point.gb.Finsbury-Park" {
        let mf = path("d4.gb.meb1");

        # Down Goods
        track(:first:station :cat:ac25,
                ks[:hos.f, :hos.f + 0.1dl] << 3.5dt
            ..  ks[:fin.yd, :fin.yd + 0.1dl] << 7.5dt
            ..  ks[:fin - 330m, :fin - 329m] << 5.5dt
            ..  ks[:fin - 270m, :fin - 200m] << 4.5dt
            ..  ks[:fin - 100m, :fin + 60m] << 6.5dt
            ..  ks[:fin + 260m, :fin + 440m] << 4.5dt
            ..  ks[:fin.f - 0.1dl, :fin.f] << 3.5dt
        );

        # Down Cannonbury
        with layer = -2 track(:first:station :cat:ac25,
                mf[:dra.f, :dra.f + 0.1dl] << 1.5dt
            ..  ks[:fin.yd, :fin.yd + 0.1dl] << 6.5dt
            ..  ks[:fin - 330m, :fin - 270m] << 4.5dt
        );
            track(:station :cat:ac25,
                    ks[:fin.yd - 50m] << 6.2dt
                --  ks[:fin.yd] << 7.5dt
            );
            track(:station :cat:ac25,
                    ks[:fin - 250m] << 4.5dt
                --  ks[:fin - 185m] << 3.5dt
            );

        # Down Moorgate (8)
        with layer = -2 track(:first:station :cat:ac25 :pax,
                mf[:dra.f, :dra.f + 0.1dl] << 0.5dt
            ..  ks[:fin.yd, :fin.yd + 0.1dl] << 5.5dt
            ..  ks[:fin - 330m, :fin - 170m] << 3.5dt
            ..  ks[:fin - 100m, :fin + 60m] << 4.5dt
            ..  ks[:fin + 200m, :fin + 410m] << 3.5dt
            ..  ks[:fin + 535m, :fin + 536m] << 1.5dt
        );
            track(:station :cat:ac25,
                    ks[:fin - 300m] << 3.5dt
                --  ks[:fin - 220m] << 2.5dt
            );

        # Down Slow (6/7)
        track(:first:station :cat:ac25 :pax,
                ks[:hos.f, :fin - 450m] << 1.5dt
            ..  ks[:fin - 330m, :fin + 150m] << 2.5dt
            ..  ks[:fin + 340m, :fin.f] << 1.5dt
        );
        with layer = -1 casing(:first:station :cat:ac25 :pax,
            ks[:hos.f, :fin - 450m] << 1.5dt
        );
            track(:station :cat:ac25,
                    ks[:fin + 150m] << 2.5dt
                --  ks[:fin + 215m] << 3.5dt
            );
            track(:station :cat:ac25,
                    ks[:fin + 340m] << 1.5dt
                --  ks[:fin + 445m] << 0.5dt
            );

        # Down Fast (5)
        track(:first:station :cat:ac25 :pax, ks[:hos.f, :fin.f] << 0.5dt);
        with layer = -1 casing(:first:station :cat:ac25 :pax,
            ks[:hos.f, :fin - 450m] << 0.5dt
        );

        # Up Fast (4)
        track(:first:station :cat:ac25 :pax, ks[:hos.f, :fin.f] >> 0.5dt);
        with layer = -1 casing(:first:station :cat:ac25 :pax,
            ks[:hos.f, :fin - 450m] >> 0.5dt
        );
            track(:station :cat:ac25,
                    ks[:fin + 200m] >> 0.5dt
                --  ks[:fin + 250m] << 0.5dt
            );

        # Up Slow (2/3)
        track(:first:station :cat:ac25 :pax,
                ks[:hos.f, :fin - 450m] >> 1.5dt
            ..  ks[:fin - 130m, :fin + 170m] >> 2.5dt
            ..  ks[:fin + 350m, :fin.f] >> 1.5dt
        );
        with layer = -1 casing(:first:station :cat:ac25 :pax,
            ks[:hos.f, :fin - 450m] >> 1.5dt
        );
            track(:station :cat:ac25,
                    ks[:fin + 350m] >> 1.5dt
                --  ks[:fin + 440m] >> 0.5dt
            );

        # Up Moorgate
        with layer = -2 track(:first:station :cat:ac25 :pax,
                mf[:dra.f, :dra.f + 0.1dl] >> 1.5dt
            ..  ks[:fin.yd, :fin - 510m] >> 3.5dt
        );
        track(:first:station :cat:ac25,
                ks[:fin - 510m, :fin - 190m] >> 3.5dt
        );
            track(:station :cat:ac25 :pax,
                    ks[:fin - 510m] >> 3.5dt
                --  ks[:fin - 410m] >> 4.5dt
            );

        # Up Cannonbury
        with layer = -2 track(:first:station :cat:ac25,
                mf[:dra.f, :dra.f + 0.1dl] >> 2.5dt
            ..  ks[:fin.yd, :fin - 410m] >> 4.5dt
        );
        track(:first:station :cat:ac25 :pax,
                ks[:fin - 410m, :fin - 260m] >> 4.5dt
        );
        track(:first:station :cat:ac25,
                ks[:fin - 261m, :fin - 260m] >> 4.5dt
            ..  ks[:fin - 115m, :fin - 114m] >> 2.5dt
        );
            track(:station :cat:ac25 :pax,
                    ks[:fin - 260m, :fin - 115m] >> 4.5dt
            );

        # Up Goods (1)
        track(:first:station :cat:ac25,
                ks[:hos.f, :hos.f + 0.1dl] >> 2.5dt
            ..  ks[:fin.yd, :fin - 260m] >> 6dt
            ..  ks[:fin - 115m, :fin - 114m] >> 4.5dt
        );
        with layer = -1 casing(:first:station :cat:ac25 :pax,
                ks[:hos.f, :hos.f + 0.1dl] >> 2.5dt
            ..  ks[:fin.yd, :fin - 260m] >> 6dt
        );
        track(:first:station :cat:ac25 :pax,
                ks[:fin - 115m, :fin + 150m] >> 4.5dt
            ..  ks[:fin + 340m, :fin + 380m] >> 2.5dt
            --  ks[:fin + 450m, :fin + 451m] >> 1.5dt
        );
        track(:first:station :cat:ac25,
                ks[:fin + 340m, :fin.f] >> 2.5dt
        );

        # Platform 8/7
        platform(:cat:ac25 :pax,
                ks[:fin - 100m, :fin + 60m] << 4.1dt
            --  ks[:fin + 60m, :fin + 120m] << 3.5dt
            --  ks[:fin + 120m, :fin - 120m] >> 2.9dt
            --  ks[:fin - 120m, :fin - 100m] << 3.5dt
        );

        # Platform 5/6
        platform(:cat:ac25 :pax,
                ks[:fin - 115m, :fin + 60m] << 2.1dt
            --  ks[:fin + 60m, :fin + 140m] << 1.5dt
            --  ks[:fin + 140m, :fin - 105m] >> 0.9dt
        );

        # Platform 4/3
        platform(:cat:ac25 :pax,
                ks[:fin - 100m, :fin + 150m] >> 0.9dt
            --  ks[:fin + 150m, :fin + 100m] << 1.4dt
            --  ks[:fin + 100m, :fin + 175m] >> 1.6dt
            --  ks[:fin + 175m, :fin - 90m] << 2.1dt
        );

        # Platform 2/1
        platform(:cat:ac25 :pax,
                ks[:fin - 85m, :fin + 160m] >> 2.9dt
            --  ks[:fin + 160m, :fin - 75m] << 4.1dt
        );

        marker(:right :de.bf :cat:ac25 :pax, ks[:fin] >> 4.5dt);
        station(:right :left_align :cat:ac25 :pax,
            ks[:fin - 0.4sw] >> 4.5dt >> 1.4sw,
            span(:bold, "Finsbury Park"),
            "ECM1: 2.33 · MEB1: 3.45 · CFP: 4.41"
        );
    }

    with link = "line.gb.ECM1" {
        # Down Goods
        track(:first :cat:ac25 :flip:tight,
                ks[:fin.f, :fin.f + 250m] << 3.5dt
            ..  ks[:har.a - 60m, :har.a] << 2.5dt
        );

        # Down Slow
        track(:first :cat:ac25 :pax :flip:tight, ks[:fin.f, :har.a] << 1.5dt);

        # Fast
        track(:first :double :cat:ac25 :pax, ks[:fin.f, :har.a]);

        # Up Slow
        track(:first :cat:ac25 :pax :tight, ks[:fin.f, :har.a] >> 1.5dt);

        # Up Goods
        track(:first :cat:ac25 :tight, ks[:fin.f, :har.a] >> 2.5dt);
    }


    with link = "point.gb.Harringay-Jn" {
        # ECM1 Down Goods
        track(:first:station :cat:ac25, ks[:har.a, :har] << 2.5dt);

        # HPW
        track(:first:station :cat:ac25,
                path("d4.gb.hpw")[:haj, :haj + 80m] >> 2.5dt
        );

        marker(:left :de.abzw :cat:ac25, ks[:haj] << 2.5dt);
        station(:left :right_align :cat:ac25,
            ks[:haj + 1sw] << 2.5dt << 1.2sw,
            "Harringay Jn.", "HPW: 0.00 · ECM1: 3.32  "
        );
    }


    with link = "point.gb.Harringay" {
        # Down Slow
        track(:first:station :cat:ac25 :pax,
                ks[:har.a, :har] << 1.5dt
        );

        # Down Fast
        track(:first:station :cat:ac25 :pax,
                ks[:har.a, :har.a + 40m] << 0.5dt
            ..  ks[:har - 90m, :har] >> 0.5dt
        );

        # Up Fast
        track(:first:station :cat:ac25 :pax,
                ks[:har.a, :har.a + 40m] >> 0.5dt
            ..  ks[:har - 90m, :har] >> 1.5dt
        );

        # Up Slow
        track(:first:station :cat:ac25 :pax,
                ks[:har.a, :har.a + 40m] >> 1.5dt
            ..  ks[:har - 90m, :har] >> 2.5dt
        );
            track(:station :cat:ac25,
                    ks[:har.a + 40m] >> 1.5dt
                --  ks[:har.a + 100m] >> 3.2dt
            );

        # Up Goods
        track(:first:station :cat:ac25,
                ks[:har.a, :har.a + 40m] >> 2.5dt
            ..  ks[:har - 90m, :har] >> 4.5dt
        );
            track(:station :cat:ac25,
                    ks[:har.a + 40m] >> 2.5dt
                --  ks[:har.a + 100m] >> 4.35dt
            );

        # Up Rev Sidings
        track(:station :cat:ac25,
                ks[:har.a - 300m, :har.a + 35m] >> 3.5dt
            ..  ks[:har - 95m, :har] >> 5.5dt
        );
    }
}

