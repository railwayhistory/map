with detail = 0 {
    with link = "line.nl.AD" {
        track(:first :double :cat :pax, path("d0.nl.ad")[:apd.z, :dv.x]);
    }

    with link = "line.nl.AE" {
        track(:first :double :cat :pax, path("d0.nl.ae")[:asd, :zvg]);
    }

    with link = "line.nl.AL" {
        track(:first :double :cat, path("d0.nl.al.1")[:ah, :zl]);
        track(:first :double :cat, path("d0.nl.al.2")[:zl.a, :lw]);
    }

    with link = "line.nl.AN" {
        track(:first :double :cat :pax, path("d0.nl.an")[:ah.f, :nm]);
    }

    with link = "line.nl.AO" {
        track(:first :double :cat :pax, path("d0.nl.ao")[:aml, :odzg]);
    }

    with link = "line.nl.AR" {
        track(:first :double :cat :pax, path("d0.nl.ar")[:asd, :rtd]);
    }

    with link = "line.nl.AS" {
        track(:first :double :cat :pax, path("d0.nl.as")[:sgra, :asra]);
    }

    with link = "line.nl.AZ" {
        track(:first :double :cat :pax, path("d0.nl.az")[:asd, :apd.z]);
    }

    with link = "line.nl.BE" {
        track(:first :double :cat :pax, path("d0.nl.be")[:bd, :ehv]);
    }

    with link = "line.nl.BR" {
        track(:first :double :cat :pax, path("d0.nl.br")[:bd, :rtd]);
    }

    with link = "line.nl.BV" {
        track(:first :double :cat :pax, path("d0.nl.bv")[:wt, :rm.y]);
    }

    with link = "line.nl.DA" {
        track(:first :double :cat :pax, path("d0.nl.da")[:spa, :aml]);
    }

    with link = "line.nl.EW" {
        track(:first :double :cat, path("d0.nl.ew")[:ehv.x, :wt]);
    }

    with link = "line.nl.GG" {
        track(:first :double :cat :pax, path("d0.nl.gg")[:gd.x, :gvc]);
    }

    with link = "line.nl.HA" {
        let ha = path("d0.nl.ha");

        track(:first :cat :pax, ha[:hdr, :sgn]);
        track(:first :double :cat :pax, ha[:sgn, :ass.x]);
    }

    with link = "line.nl.HR" {
        track(:first :double :cat :pax, path("d0.nl.hr")[:hfd.x, :rtd.z]);
    }

    with link = "line.nl.LM" {
        track(:first :double :cat :pax, path("d0.nl.lm")[:edng, :mt]);
    }

    with link = "line.nl.LR" {
        track(:first :double :cat :pax, path("d0.nl.lr")[:zlw.x, :rsdg]);
    }

    with link = "line.nl.LW" {
        track(:first :double :cat :pax, path("d0.nl.lw")[:lls, :htba]);
    }

    with link = "line.nl.MG" {
        track(:first :double :cat :pax, path("d0.nl.mg")[:mp, :gn]);
    }

    with link = "line.nl.MV" {
        track(:first :double :cat :pax, path("d0.nl.mv")[:mt, :rm.y]);
    }

    with link = "line.nl.RB" {
        track(:first :double :cat :pax, path("d0.nl.rb")[:rsd.x, :bd.x]);
    }

    with link = "line.nl.RN" {
        let rn = path("d0.nl.rn");

        track(:first :double :cat :pax, rn[:brd.x, :zlw.y]);
        track(:first :double :cat :pax, rn[:bdpb.x, :bdgr]);
    }

    with link = "line.nl.RV" {
        track(:first :double :cat :pax, path("d0.nl.rv")[:rsd, :vs]);
    }

    with link = "line.nl.RZ" {
        with layer = -2 track(:first :double :cat,
            path("d0.nl.rz")[:kfh.x, :zv.x]
        );
    }

    with link = "line.nl.TN" {
        let tn = path("d0.nl.tn");

        track(:first :double :cat :pax, tn[:tb.y, :vga]);
        track(:first :double :cat :pax, tn[:ht.x, :nm]);
    }

    with link = "line.nl.UB" {
        track(:first :double :cat :pax, path("d0.nl.ub")[:ut.y, :btl]);
    }

    with link = "line.nl.UK" {
        track(:first :double :cat :pax, path("d0.nl.uk.1")[:ut, :zl]);
    }

    with link = "line.nl.UR" {
        track(:first :double :cat :pax, path("d0.nl.ur")[:ut, :rtd.x]);
    }

    with link = "line.nl.VE" {
        track(:first :double :cat :pax, path("d0.nl.ve")[:vl, :ehv]);
    }

    with link = "line.nl.VV" {
        track(:first :double :cat :pax, path("d0.nl.vv")[:vlgr, :vl]);
    }

    with link = "line.nl.WS" {
        track(:first :double :cat :pax, path("d0.nl.ws")[:gdpa, :ledn.x]);
    }

    with link = "line.nl.WY" {
        track(:first :double :cat :pax, path("d0.nl.wy")[:wp.x, :lls]);
    }

    with link = "line.nl.ZE" {
        let ze = path("d0.nl.ze");

        track(:first :double :cat :pax, ze[:zd.x, :hnk]);
        track(:first :cat :pax, ze[:hnk, :ekz]);
    }
}

